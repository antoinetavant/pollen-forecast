# Generated by Django 5.1.7 on 2025-04-09 13:44
from django.contrib.postgres.operations import CreateExtension
import django.contrib.gis.db.models.fields
from django.db import migrations
from django.contrib.gis.geos import Point


def populate_location(apps, schema_editor):
    City = apps.get_model("cityforecast", "City")
    for city in City.objects.all():
        if city.latitude is not None and city.longitude is not None:
            city.location = Point(city.longitude, city.latitude, srid=4326)
            city.save()


class Migration(migrations.Migration):

    dependencies = [
        ("cityforecast", "0009_add_similarity"),
    ]

    operations = [CreateExtension("postgis"),
                  
        migrations.AddField(
            model_name="city",
            name="location",
            field=django.contrib.gis.db.models.fields.PointField(
                null=True,
                default=None,
                geography=True,
                help_text="The geographical location of the city.",
                srid=4326,
            ),
        ),
        migrations.RunPython(populate_location),
        migrations.AlterField(
            model_name="city",
            name="location",
            field=django.contrib.gis.db.models.fields.PointField(
                null=False,  # Enforce non-null constraint after population
                geography=True,
                help_text="The geographical location of the city.",
                srid=4326,
            ),
        ),
    ]
